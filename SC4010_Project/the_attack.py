import generate_RSA, wiener_attack, simple_RSA

def main():
    print("Generating Vulnerable RSA Keys")
    #e, n, d = generate_RSA.gen_vulnerable_keys()
    #e, n, d = simple_RSA.RSA()

    #Working set
    #e = 30749686305802061816334591167284030734478031427751495527922388099381921172620569310945418007467306454160014597828390709770861577479329793948103408489494025272834473555854835044153374978554414416305012267643957838998648651100705446875979573675767605387333733876537528353237076626094553367977134079292593746416875606876735717905892280664538346000950343671655257046364067221469807138232820446015769882472160551840052921930357988334306659120253114790638496480092361951536576427295789429197483597859657977832368912534761100269065509351345050758943674651053419982561094432258103614830448382949765459939698951824447818497599
    #n = 109966163992903243770643456296093759130737510333736483352345488643432614201030629970207047930115652268531222079508230987041869779760776072105738457123387124961036111210544028669181361694095594938869077306417325203381820822917059651429857093388618818437282624857927551285811542685269229705594166370426152128895901914709902037365652575730201897361139518816164746228733410283595236405985958414491372301878718635708605256444921222945267625853091126691358833453283744166617463257821375566155675868452032401961727814314481343467702299949407935602389342183536222842556906657001984320973035314726867840698884052182976760066141
    
    #Working set 2048bits
    #n = 22836858353287668091920368816286415778103964252589282951304204749990229966219821666645965814540188994842992237656073262275487153804387435627030082632116650572564937978011181394388679265524940467869924854736500383557204094262355848335841884492243316986356990029691160546064558117652232596722139327390669673188457131381644120787783215342848744792830245018055981406688933203072001361907941383251321687221421794347400173174782270159663404029234219498695194551646668806852454006312372413658692027515557841414406612321469051864313571125665367706693817569253817941547895452285471196859927901448206057935428455238863726089083
    #e = 17160819308904585327789016134897914235762203050367346326795855670589639956759654280349066373746605316475059968746119216642450591929370601129337832009643372382766547546926535697752805239918767190684796265092986690494859761183156661268716818476416708725889507391913936637990186766407654053176557709023167209821832859747419658344363466584895316847817524247032573926518508235172974203821389437703589046605944230019122859293725173459273262320732474230363132436274414264865868028527840102483762414082363751872086126321058865023936481567763302369873292499881142950825612490253095749933833690395192403591650153661610070010419
    
    #Not working set 2047bits
    n = 13589559874499142355751341406035397684255014057126074107542128678226120805968144470881921455188421199958881804793787862241122953475325559673599672520286335533603757756220187100459480766110302567765384002615378427706137294329327237056965340554246676192238028495484178363269586639055958512318119343461203157683957219446440131865111755637262034345904525944378245664360781126077167607773923145892054273772268437286473549239327507165202984412539272993494393051276342706564766558323502943968139657917910935303127172003394948840018966371344751083592758498686562766142991016439706774683565904851307008653906602359169432359573
    e = 13304190305540874988537606932970841745187260177538586692536629973666723493599969039027603809193689401864701342931024242788337425097494436400540365929405551611921972457828733905335876145884966324498356636307109882051341675000847275098816480646360997741181379056131957228236725683521298430680120181413196040521148335594185317357181376243102285349453986073741265996084174232546667689203317832651303040826314383724274089312645508566625119551763409129593521919571799876282943338137212590478107436224521388686150923674070654517584476965434899752981788701659669410312149739405387634998001901681249323342574748913658325046931
 
    message = input("Enter mesage to encrypt: ")
    
    #print("Public Encryption Component E =", e)
    #print("Public Modulus N = ", n)
    #print("Private Decryption Exponent D = ", d)

    #print("Plain Text Message = ", message)
    encoded_message = [ord(c) for c in message]
    #print("Encoded message = ", encoded_message)

    ciphertext = [pow(c, e, n) for c in encoded_message]
    #print("Cipher Text = ", ciphertext)

    print("Using Wiener's Attack to Decrypt Cipher Text")

    wiener_d = wiener_attack.wiener_attack(e, n)

    if(wiener_d == "Decryption Exponent Not Found"):
        print(wiener_d)
        return

    print("Decryption Exponent D Found Using Wiener's Attack = ", wiener_d)
    print("Decrypting Cipher Text")

    encoded_plaintext = [pow(c, wiener_d, n) for c in ciphertext]
    plaintext = "".join(chr(c) for c in encoded_plaintext)

    print("Decrypted Message = ", plaintext)


